<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>objPlayerAllyFightParent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>objPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>retreat = false
lastX = x
global.CANMOVE = true
Target = false
lastY = y
ai = path_add()
xx = 480
yy = 180
sel = 0
move = true
attacking = false
defend = false
lastRoom = ""
tx = 0
ty = 0
image_speed = 0.1
nearest = "null"
fight = false
global.selection[6,0] = true
level = 1
xp = 0
xpcap = 0
hp = 0
mp = 0
str = 0
int = 0
acc = 0
dex = 0
def = 0
time = 0
dir = "null"
battleHp = noone
basic = false
timeLimit = noone
timeAttack = false
weapon = "Fist"
class = "Player"
prior = false
priority = noone
ready = false
attacked = false

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if sprite_index = sprPlayerCombatPunch{
    enemy = instance_nearest(xx,yy,objEnemyFightParent){
        enemy.battleHp -= (str+int)/2
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index = sprPlayerCombatPunch{
    sprite_index = sprPlayerCombatIdle

    if (mp_grid_path(global.grid,ai,x,y,global.allyPos[2,1],global.allyPos[2,2],1)) &amp;&amp; attacking = false
        {
            path_start(ai,3,0,0)
            attacked = true
            sel = noone
        }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_tavern{
    visible = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room = rm_MFight or room = rm_TutFight or room = rm_FightC or room = rm_FightIC or room = rm_tavern{  
        sprite_index = sprPlayerCombatIdle

     battleHp = hp
    vspeed = 0
    hspeed = 0
    time = 0
    timeAttack = false
    ready = false
    attacked = false
    atacking = false
}

if room = rm_Tutorial or room = rm_meadow or room = rm_Mountain or room = rm_OutsideCastle or room = rm_Throne{
    visible = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if room !=rmSplash and room !=rm_MFight and room != rm_TutFight and room != rm_FightC and room != rm_FightIC{

    if keyboard_check(ord("A"))
        {
        hspeed = -1.5 
        sprite_index = sprPlayerLeft
        }else if !keyboard_check(ord("D"))
        {
        hspeed = 0
        
        }                      
        
    if keyboard_check(ord("D"))
        {
        hspeed = 1.5 
        sprite_index = sprPlayerRight
        }else if !keyboard_check(ord("A"))
        {
        hspeed = 0

        }
                            
    if keyboard_check(ord("S"))
        {
        vspeed = 1.5 
        sprite_index = sprPlayerDown
        }else if !keyboard_check(ord("W"))
        {
        vspeed = 0

        }
                     
    if keyboard_check(ord("W"))
        {
        vspeed = -1.5 
        sprite_index = sprPlayerUp
        }else if !keyboard_check(ord("S"))
        {
        vspeed = 0

        }

        if Target = true
{
    global.CANMOVE = false
    direction = point_direction(x,y,xTarget,yTarget)
    speed = point_distance(x,y,xTarget,yTarget)/30
    image_index = 4

    draw_self()
}else 
{
    global.CANMOVE = true

    if mouse_y &lt;= y draw_self()
//    speed = 0
}

//if keyboard_check(vk_nokey)
    {
        if keyboard_check_released(ord("W"))
        {
            sprite_index = sprPlayerIdleUp
        }
       
         if keyboard_check_released(ord("S"))
        {
            sprite_index = sprPlayerIdle
        }
        
        if keyboard_check_released(ord("D"))
        {
            sprite_index = sprPlayerIdleRight
        }
        
        if keyboard_check_released(ord("A"))
        {
            sprite_index = sprPlayerIdleLeft
        }
    }
    if hspeed !=0
if !place_free(x + hspeed,y)
{
    if hspeed &gt; 0 move_contact_solid(0,hspeed)
    if hspeed &lt; 0 move_contact_solid(180,-hspeed)
    hspeed = 0
}

if vspeed != 0
if !place_free(x +hspeed, y + vspeed)
{
    if vspeed &gt; 0 move_contact_solid(270,vspeed)
    if vspeed &lt; 0 move_contact_solid(90,-vspeed)
    vspeed = 0
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collosion with Enemy

if (distance_to_object(objEnemyParent) &lt; 8)
{
    instance_create(x,y,objHitBox)
    
}

if fight = true{
    lastX = x
    lastY = y
    lastRoom = room_get_name(room) //(room_get_name(room))
    if room = rm_Tutorial{
    with instance_create(0,0,objRoomTransfer) targetRoom = rm_TutFight
    }
    if room = rm_Mountain{
    with instance_create(0,0,objRoomTransfer) targetRoom = rm_FightC
    }
    if room = rm_meadow{
    with instance_create(0,0,objRoomTransfer) targetRoom = rm_MFight
    }
    if room = rm_OutsideCastle{
    with instance_create(0,0,objRoomTransfer) targetRoom = rm_FightC
    }
    if room = rm_Throne{
    with instance_create(0,0,objRoomTransfer) targetRoom = rm_FightIC
    }
    fight = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move to Enemy
draw_self()
    sel = clamp(sel,1,9)
if x = xx + 40 &amp;&amp; y = yy &amp;&amp; attacking = false{ 
    sprite_index = sprPlayerCombatPunch
}    
if ready = true &amp;&amp; attacked = true &amp;&amp; x = global.allyPos[2,1] &amp;&amp; y = global.allyPos[2,2]{ //reset everything when you get backto home
        ready = false
        global.attack = false
        attacked = false
        }
 if (x = global.allyPos[2,1] &amp;&amp; y = global.allyPos[2,2] &amp;&amp; timeAttack = true){ //once timer hits limit set attacking to true
        attacking = true
    }else attacking = false   
    
if global.attacker = 2{

var px = (objPlayer.x div 16) * 16 + 8
var py = (objPlayer.y div 16) * 16 + 8


    
    
if attacking != false{
    if keyboard_check_pressed(vk_space) &amp;&amp; (mp_grid_path(global.grid,ai,x,y,xx + 40,yy,1)) &amp;&amp; attacking = true &amp;&amp; (global.attack = true and ready = true) &amp;&amp; basic = true//moves when all variables are true
        {
            sprite_index = sprPlayerLeft
            basic = false
            path_start(ai,3,0,0)
            time = 0
        }
}  
if attacking = true{
    if keyboard_check_pressed(ord("W")){
            sel += -3
            dir = "up"
        }
    if keyboard_check_pressed(ord("A")){
            sel += -1
            dir = "left"
        }
    if keyboard_check_pressed(ord("S")){
            sel += 3
            dir = "down"
        }
    if keyboard_check_pressed(ord("D")){
            sel += 1
            dir = "right"
        }

    if sel = 10 sel = 1
    if sel = 11 sel = 2
    if sel &gt;= 12 sel = 3
    
    if sel = 0 sel = 9
    if sel = -1 sel = 8
    if sel = -2 sel = 7
    if sel &lt;= -3 sel = 7
}
    
    draw_self()
    
//Select Monster
if basic = true{
if sel = 1 
{
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.enemyPos[1,1]
    yy = global.enemyPos[1,2]
    if class = "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
    draw_sprite(sprEnemyTarget,0,xx,yy)
    }
}

if sel = 2
{
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.enemyPos[2,1]
    yy = global.enemyPos[2,2]
    if class = "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
    draw_sprite(sprEnemyTarget,0,xx,yy)
    }
}

if sel = 3
{
if global.selection[sel,0] = true{
    if class != "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
}
    if sel = 10 sel = 1
    if sel = 11 sel = 2
    if sel = 12 sel = 3
    
    if sel = 0 sel = 9
    if sel = -1 sel = 8
    if sel = -2 sel = 7
    if sel &lt;= -3 sel = 7
    
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    
    }else{
    xx = global.allyPos[1,1] - 40
    yy = global.allyPos[1,2]
    draw_sprite(sprAllyTarget,0,xx + 40,yy)
    }
}

if sel = 4
{
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.enemyPos[3,1]
    yy = global.enemyPos[3,2]
    if class = "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
    draw_sprite(sprEnemyTarget,0,xx,yy)
    }
}
    
if sel = 5 
{
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.enemyPos[4,1]
    yy = global.enemyPos[4,2]
    if class = "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
    draw_sprite(sprEnemyTarget,0,xx,yy)
    }
}

    
if sel = 6 
{
if global.selection[sel,0] = true{
    if class != "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
}
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.allyPos[2,1] - 40
    yy = global.allyPos[2,2]
    draw_sprite(sprAllyTarget,0,xx + 40,yy)
    }
}
    if sel = 10 sel = 1
    if sel = 11 sel = 2
    if sel = 12 sel = 3
    
    if sel = 0 sel = 9
    if sel = -1 sel = 8
    if sel = -2 sel = 7
    if sel &lt;= -3 sel = 7
    
if sel = 7
{
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.enemyPos[5,1]
    yy = global.enemyPos[5,2]
    if class = "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
    draw_sprite(sprEnemyTarget,0,xx,yy)
    }
}

    
if sel = 8 
{
    if global.selection[sel,0] = false{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.enemyPos[6,1]
    yy = global.enemyPos[6,2]
    if class = "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
    draw_sprite(sprEnemyTarget,0,xx,yy)
    }
}

    
if sel = 9
{
if global.selection[sel,0] = true{
    if class != "bard"{
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }
}
    if global.selection[sel,0] = false{
    
        if dir = "right"{
        sel ++
        }
        if dir = "left"{
        sel --
        }
        if dir = "up"{
        sel -=3
        }
        if dir = "down"{
        sel +=3
        }
    }else{
    xx = global.allyPos[3,1] - 40
    yy = global.allyPos[3,2]
    draw_sprite(sprAllyTarget,0,xx + 40,yy)
    }
}
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///image speeds
depth = -y
if sprite_index = sprPlayerCombatIdle{
    image_speed = 0.2
}
if sprite_index = sprPlayerCombatPunch{
    image_speed = 0.1
}
if sprite_index = sprPlayerFighterCombatIdle{
    image_speed = 0.2
}
if sprite_index = sprPlayerFighterCombatSwing{
    image_speed = 0.1
}
if sprite_index = sprPlayerMageCombatIdle{
    image_speed = 0.2
}
if sprite_index = sprPlayerMageCombatCast{
    image_speed = 0.1
}
if sprite_index = sprPlayerBardCombatIdle{
    image_speed = 0.2
}
if sprite_index = sprPlayerBardCombatPlay{
    image_speed = 0.1
}
if sprite_index = sprPlayerRogueCombatIdle{
    image_speed = 0.2
}
if sprite_index = sprPlayerRogueCombatDraw{
    image_speed = 0.1
}
if sprite_index = sprPlayerArcherCombatIdle{
    image_speed = 0.2
}
if sprite_index = sprPlayerArcherCombatShoot{
    image_speed = 0.1
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Leveling
if level = 1 xpcap = 200
else if level = 2 xpcap = 500
else if level = 3 xpcap = 1000
else if level = 4 xpcap = 1500
else if level = 5 xpcap = 2000
else if level = 6 xpcap = 2500
else if level = 7 xpcap = 3000
else if level = 8 xpcap = 3500
else if level = 9 xpcap = 4000
else if level = 10 xpcap = 4500
else if level = 11 xpcap = 5000
else if level = 12 xpcap = 5500
else if level = 13 xpcap = 6000
else if level = 14 xpcap = 6500
else if level = 15 xpcap = 7000
else if level = 16 xpcap = 7500
else if level = 17 xpcap = 8000
else if level = 18 xpcap = 8500
else if level = 19 xpcap = 9000
else if level = 20 xpcap = 10000

if class = "Player"{
    hp = 5
    mp = 5
    str = 5
    int = 5
    acc = 5
    dex = 5
}

if class = "fighter" {
    hp =  round(sqrt((200+0)*((level+(1.5*level))/10)))
    mp =  round(sqrt((150+0)*((level+(1*level))/5)))
    str=  round(sqrt((200+0)*((level+(1.5*level))/10)))
    int=  round(sqrt((150+0)*((level+(1*level))/5)))
    acc=  round(sqrt((125+0)*((level+(1*level))/7)))
    dex=  round(sqrt((125+0)*((level+(1*level))/7)))
}
if class = "mage" {
    hp =  round(sqrt((125+0)*((level+(1*level))/7)))
    mp =  round(sqrt((200+0)*((level+(1.5*level))/10)))
    str=  round(sqrt((125+0)*((level+(1*level))/7)))
    int=  round(sqrt((150+0)*((level+(1*level))/5)))
    acc=  round(sqrt((150+0)*((level+(1*level))/5)))
    dex=  round(sqrt((200+0)*((level+(1.5*level))/10)))
}
if class = "bard" {
    hp =  round(sqrt((125+0)*((level+(1*level))/7)))
    mp =  round(sqrt((200+0)*((level+(1.5*level))/10)))
    str=  round(sqrt((150+0)*((level+(1*level))/5)))
    int=  round(sqrt((200+0)*((level+(1.5*level))/10)))
    acc=  round(sqrt((150+0)*((level+(1*level))/5)))
    dex=  round(sqrt((125+0)*((level+(1*level))/7)))
}
if class = "archer" {
    hp =  round(sqrt((150+0)*((level+(1*level))/5)))
    mp =  round(sqrt((150+0)*((level+(1*level))/5)))
    str=  round(sqrt((200+0)*((level+(1.5*level))/10)))
    int=  round(sqrt((125+0)*((level+(1*level))/7)))
    acc=  round(sqrt((200+0)*((level+(1.5*level))/10)))
    dex=  round(sqrt((125+0)*((level+(1*level))/7)))
}if class = "rogue" {
    hp =  round(sqrt((125+0)*((level+(1*level))/7)))
    mp =  round(sqrt((150+0)*((level+(1*level))/5)))
    str=  round(sqrt((125+0)*((level+(1*level))/7)))
    int=  round(sqrt((150+0)*((level+(1*level))/5)))
    acc=  round(sqrt((200+0)*((level+(1.5*level))/10)))
    dex=  round(sqrt((200+0)*((level+(1.5*level))/10)))
}

if xp &gt; xpcap{
level ++
xp = xp - xpcap
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Combat
    if class = "Player"{
        timeLimit = 600
    }
    if class = "fighter"{
        timeLimit = 780
    }
    if class = "mage"{
        timeLimit = 600
    }
    if class = "bard"{
        timeLimit = 600
    }
    if class = "archer"{
        timeLimit = 780
    }
    if class = "rogue"{
        timeLimit = 420
    }
if room = rm_MFight or room = rm_TutFight or room = rm_FightC or room = rm_FightIC{
    if timeAttack = false &amp;&amp; global.attack = false { //prevents timer from running during an attack animation
    time ++
    }
    
    if class = "Player"{
        if time &gt;= timeLimit{
            timeAttack = true
            if global.attack = false{ //only allows one person to be ready at a time
            ready = true
            objGui.gui = true
            }
            global.attack = true
        }else timeAttack = false
    }
    if class = "fighter"{
        if time &gt;= timeLimit{
            timeAttack = true
            if global.attack = false{ //only allows one person to be ready at a time
            ready = true
            objGui.gui = true
            }
            global.attack = true
        }else timeAttack = false
    }
    if class = "mage"{
        if time &gt;= timeLimit{
            timeAttack = true
            if global.attack = false{
            objGui.gui = true
            ready = true
            }
            global.attack = true
        }else timeAttack = false
    }
    if class = "bard"{
        if time &gt;= timeLimit{
            timeAttack = true
            if global.attack = false{
            objGui.gui = true
            ready = true
            }
            global.attack = true
        }else timeAttack = false
    }
    if class = "rogue"{
        if time &gt;= timeLimit{
            timeAttack = true
            if global.attack = false{
            objGui.gui = true
            ready = true
            }
            global.attack = true
        }else timeAttack = false
    }
    if class = "archer"{
        if time &gt;= timeLimit{
            timeAttack = true
            if global.attack = false{
            objGui.gui = true
            ready = true
            }
            global.attack = true
        }else timeAttack = false
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Max Hp
if room = rm_MFight or room = rm_TutFight or room = rm_FightC or room = rm_FightIC{
    if battleHp &gt; hp{
        battleHp = hp
    }
    if battleHp &lt;= 0{
        show_message("Game Over")
        game_end()
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///image speeds
if room = rm_meadow or room = rm_Tutorial or room = rm_OutsideCastle or room = rm_Mountain{
    image_speed = 0.3
}

if room = rmSplash{
    visible = false
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check no enemies

if room = rm_MFight or room = rm_TutFight or room = rm_FightC or room = rm_FightIC{
if global.selection[1,0] = false &amp;&amp; global.selection[2,0] = false &amp;&amp; global.selection[4,0] = false &amp;&amp; global.selection[5,0] = false &amp;&amp; global.selection[7,0] = false &amp;&amp; global.selection[8,0] = false and x = global.allyPos[2,1] &amp;&amp; y = global.allyPos[2,2] and objMasterController.roomt = true{
    objMasterController.roomt = false
    with instance_create(x,y,objRoomTransfer) targetRoom = objPlayer.lastRoom
    
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
